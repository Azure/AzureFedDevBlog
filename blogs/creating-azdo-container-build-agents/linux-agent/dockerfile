###############################################################################
# MIT License
#   Copyright (c) Microsoft Corporation.
#
#   Permission is hereby granted, free of charge, to any person obtaining a copy
#   in the Software without restriction, including without limitation the rights
#   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#   copies of the Software, and to permit persons to whom the Software is
#   furnished to do so, subject to the following conditions:
#
#    The above copyright notice and this permission notice shall be included in all
#    copies or substantial portions of the Software.
#
#    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#    SOFTWARE
###############################################################################
###############################################################################
#Tool Baseline for Ubuntu Linux agent image
#   AZ CLI Current version https://packages.microsoft.com/repos/azure-cli/dists/
#   Node.js v20.12.2
#   npm v10.5.0
#   .NET SDK 8 latest
###############################################################################

FROM ubuntu:22.04
# Avoid prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

EXPOSE 8000

RUN echo "APT::Get::Assume-Yes \"true\";" > /etc/apt/apt.conf.d/90assumeyes

RUN apt-get update \ 
    && apt-get upgrade -y \
    && apt-get clean -y 

#Install common tools, wget, curl, git, etc. and remove ssh client and server for CVE-2020-14145    
RUN apt-get install -y wget \
        apt-transport-https \
        apt-utils \
        ca-certificates \
        curl \
        git \
        iputils-ping \
        jq \
        dos2unix \
        lsb-release \
        xz-utils \
        libssl-dev \
        gss-ntlmssp \
        software-properties-common && \
        apt-get remove -y openssh-client openssh-server && \
        apt-get clean -y && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* 

# Install the Azure Artifacts Credential Provider
RUN curl -L https://raw.githubusercontent.com/Microsoft/artifacts-credprovider/master/helpers/installcredprovider.sh  | sh

#Private artifacts feed configuration
ARG FEED_ACCESSTOKEN="{feedaccesstoken}"
ARG FEED_URL="https://pkgs.dev.azure.com/organization/projectCollection/_packaging/feedName/nuget/v3/index.json"

#Set environment variables for the private artifacts feed
ENV VSS_NUGET_EXTERNAL_FEED_ENDPOINTS="{\"endpointCredentials\": [{\"endpoint\":\"${FEED_URL}\", \"username\":\"docker\", \"password\":\"${FEED_ACCESSTOKEN}\"}]}"

#Install Powershell Core
RUN wget -q https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb && \ 
        dpkg -i packages-microsoft-prod.deb && \
        apt-get update && \
        apt-get install -y powershell

#Download and install .NET Core SDK
RUN curl -sSL -O https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb \
    && dpkg -i packages-microsoft-prod.deb \
    && rm /packages-microsoft-prod.deb \
    && apt-get update && apt-get install -y dotnet-sdk-8.0

#Install .NET Core NuGet Credential Provider
RUN curl -fSL --output Microsoft.Net6.NuGet.CredentialProvider.tar.gz https://github.com/microsoft/artifacts-credprovider/releases/download/v1.1.1/Microsoft.Net6.NuGet.CredentialProvider.tar.gz \
    && tar -oxzf Microsoft.Net6.NuGet.CredentialProvider.tar.gz \
    && rm Microsoft.Net6.NuGet.CredentialProvider.tar.gz \
    && mkdir -p $HOME/.nuget/plugins \
    && cp -r plugins/netcore $HOME/.nuget/plugins

ENV \
    # Enable detection of running in a container 
    DOTNET_RUNNING_IN_CONTAINER=true
    
ENV NUGET_PLUGIN_PATHS=/plugins/netcore/CredentialProvider.Microsoft/CredentialProvider.Microsoft.dll

#Install Azure CLI
RUN curl -sL https://aka.ms/InstallAzureCLIDeb | bash

WORKDIR /home/app
COPY ./package.json /home/app/

#Install NodeJS
RUN curl --output node-v20.12.2-linux-x64.tar.xz https://nodejs.org/dist/v20.12.2/node-v20.12.2-linux-x64.tar.xz \
    && tar -xvf node-v20.12.2-linux-x64.tar.xz \
    && cp -r node-v20.12.2-linux-x64/* /usr/ \
    && export PATH=/usr/node-v20.12.2-linux-x64/bin:$PATH \
    && rm node-v20.12.2-linux-x64.tar.xz

#remove python3 for Microsoft Defender findings
RUN apt purge --autoremove python3-jwt -y

#Optional add dnsutils for debugging
# RUN apt-get install dnsutils -y

#Optional - add private intermediate/CA Certs
#COPY ./Certificates/ /usr/local/share/ca-certificates
#RUN update-ca-certificates 

#Set ARGs for user creation
ARG USERNAME=agent
ARG USER_UID=1000
ARG USER_GID=$USER_UID

#Create user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    #
    #Add sudo support
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# Can be 'linux-x64', 'linux-arm64', 'linux-arm', 'rhel.6-x64'.
ENV TARGETARCH=linux-x64

WORKDIR /azp

COPY ./start.sh .
RUN dos2unix start.sh && chmod +x start.sh

#Set ENTRYPOINT to start.sh to start the agent
ENTRYPOINT [ "bash", "./start.sh" ]
#Debug container with sleep. Comment out ENTRYPOINT and uncomment below to debug
#ENTRYPOINT [ "sleep", "infinity" ]
